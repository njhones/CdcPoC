version: '2'
services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    container_name: zookeeper
    networks:
     - dbzui-network
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    container_name: kafka
    networks:
     - dbzui-network
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    networks:
     - dbzui-network
    ports:
     - 1433:1433
    environment:
     - ACCEPT_EULA=Y
     - MSSQL_PID=Standard
     - SA_PASSWORD=Password!
     - MSSQL_AGENT_ENABLED=true
  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    container_name: connect
    networks:
     - dbzui-network
    ports:
     - 8083:8083
    links:
     - kafka
     - sqlserver
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    networks:
     - dbzui-network
    ports:
     - 9000:9000
    environment:
     KAFKA_BROKERCONNECT: PLAINTEXT://kafka:9092
     JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
     SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
    depends_on:
     - kafka
  debezium-ui:
    container_name: debezium-ui   
    image: debezium/debezium-ui
    networks:
      - dbzui-network
    ports:
      - 8080:8080
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083
    depends_on:
      - connect

networks:
  dbzui-network:
    external: false

